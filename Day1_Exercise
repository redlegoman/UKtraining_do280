yum module install container-tools -y
podman info
podman version
podman images
podman pull quay.io/kushalsamota/centos
podman images
podman pull docker.io/mysql
podman images
podman pull docker.io/mysql:5.6
podman images

podman pull quay.io/kushalsamota/httpd
podman inspect quay.io/kushalsamota/httpd ============ see the cmd and all other things
podman inspect quay.io/kushalsamota/centos ============ see the cmd and all other things
podman rmi <imageid of centos image>
podman images
podman system df
podman pull quay.io/kushalsamota/httpd
podman images

##################################################################
container exercise
##################################################################

podman run -itd --name centoscontainer quay.io/kushalsamota/centos
podman ps
podman ps -a
podman rm centoscontainer
podman stop centoscontainer
podman rm centoscontainer
podman ps
podman run -itd --name centoscontainer quay.io/kushalsamota/centos
podman ps
podman run -d --name apachecontainer quay.io/kushalsamota/httpd
podman exec -it apachecontainer bash ==== to go in container
exit
podman ps
podman exec -it centoscontainer hostname
podman exec -it centoscontainer cat /etc/redhat-release
podman exec -it centoscontainer cat /etc/passwd
podman rm -f centoscontainer apachecontainer
podman run -d --name mysqlcontainer -e MYSQL_ROOT_PASSWORD=redhat mysql:5.6
podman ps
podman exec -it mysqlcontainer bash
mysql -u root -p ==== give redhat as password on prompt
show databases;
exit
exit
podman ps
podman rm -f mysqlcontainer

podman run -d --name tomcatcontainer docker.io/tomcat:9.0
podman inspect tomcatcontainer ==== see all info about container
podman rm -f tomcatcontainer
podman rm -f $(podman ps -a -q)  == this will remove all the container forcefully
podman system df
podman ps
podman run --help | grep cpu   === you can limit cpu
podman run --help | grep memory === you can limit memory

# copy the file inside container and from container
podman run -itd --name centoscontainer centos
touch /index.html
podman cp /index.html centoscontainer:/
podman exec -it centoscontainer ls /
podman cp centoscontainer:/etc/passwd  /
ls /
podman rm -f centoscontainer
podman run -d --name apachecontainer httpd
podman logs apachecontainer
podman rm -f apachecontainer
done...!

===============================================
Network Exercise
podman ps
podman run -d --name apache -p 80:80 quay.io/kushalsamota/httpd
podman ps
curl localhost:80

podman network ls
podman network inspect podman  === and see the range from which container are having the ip addresses
podman run -itd --name centos1 quay.io/kushalsamota/centos
podman run -itd --name centos2 quay.io/kushalsamota/centos
podman inspect centos1 | grep -i ip
podman inspect centos2 | grep -i ip
podman exec -it centos1 bash
ping <ip of centos2>
exit
podman rm -f centos1 centos2
podman rm -f apache

podman run -d --name nginx -p 82:80 quay.io/kushalsamota/nginx
netstat -tulpn | grep -i listen ===== and see which process is listening on 82 port number. you will also see the pid of process listening on 82. like 19742/82
ps -ef | grep pidofprocess
curl localhost:82
podman rm -f nginx

podman run -d -p 80:80 --name apache1 quay.io/kushalsamota/httpd
podman run -d -p 82:80 --name apache2 quay.io/kushalsamota/httpd
podman port --all === to see all port mappings.
podman rm -f apache1 apache2



